<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_3d_particle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
fireparticles = 100
smokeparticles= 10

fireheight = 200 / 3  //Height in CM / 3
firelow = 4
firespeed = 0.7

smokeheight = 600 / 3 //Height in CM / 3
smokelow = 190 / 3
smokespeed = 0.2

wide = 26

for (i=0; i&lt;fireparticles; i++) {
    f_part[i,0] = x-wide/2+random(wide) //X
    f_part[i,1] = y-wide/2+random(wide) //Y
    f_part[i,2] = firelow+random(fireheight) //Z
    f_part[i,3] = random(360); //Direction
    f_part[i,4] = 0.3+(random(70)/100); // Alpha
}

for (i=0; i&lt;smokeparticles; i++) {
    s_part[i,0] = x-wide/2+random(wide) //X
    s_part[i,1] = y-wide/2+random(wide) //Y
    s_part[i,2] = smokelow+random(smokeheight) //Z
    s_part[i,3] = random(360); //Direction
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_culling(false)    

    disableLights();
    //Draw the particles
    for (i=0; i&lt;fireparticles; i++) {
        xx=f_part[i,0];
        yy=f_part[i,1];
        zz=f_part[i,2];

        d3d_transform_set_identity();
        draw_set_alpha(f_part[i,4]);
        d3d_transform_add_scaling(2-(zz/fireheight),2-(zz/fireheight),2-(zz/fireheight));
        d3d_transform_add_translation(xx,yy,zz);   
        d3d_model_draw(global.MODEL[MOD_EFFECT_PLANE],0,0,0,global.TEX[TEX_FIRE]);
        d3d_transform_set_identity();
        draw_set_alpha(1);
    }
    
    enableLights();   
    
    for (i=0; i&lt;smokeparticles; i++) {
        xx=s_part[i,0];
        yy=s_part[i,1];
        zz=s_part[i,2];
        
        d3d_transform_set_identity();

        draw_set_alpha(1-(zz/smokeheight));
        size = 1 + 16*(zz/smokeheight);
        d3d_transform_add_scaling(size,size,size);
        d3d_transform_add_translation(xx,yy,zz);   
        d3d_model_draw(global.MODEL[MOD_EFFECT_PLANE],0,0,0,global.TEX[TEX_SMOKE]);
        d3d_transform_set_identity();
        draw_set_alpha(1);
    }
    
    // move the particles
    for (i=0; i&lt;fireparticles; i++) {
        f_part[i,2]+=firespeed; //Move up

        f_part[i,3] = point_direction(x,y,f_part[i,0],f_part[i,1]);
        //Move to direction
        f_part[i,0]-=lengthdir_x(firespeed/6,f_part[i,3]); 
        f_part[i,1]-=lengthdir_y(firespeed/6,f_part[i,3]);
        
        if (f_part[i,2] &gt; fireheight) { //If they reach the limit, respawn them down
            f_part[i,0] = x-wide/2+random(wide) //X
            f_part[i,1] = y-wide/2+random(wide) //Y
            f_part[i,2] = firelow //Z
            f_part[i,3] = point_direction(x,y,f_part[i,0]*1.5,f_part[i,1]); //We want fire to move to the center
            f_part[i,4] = 0.3+(random(70)/100); // Alpha
        }
    }
        
    for (i=0; i&lt;smokeparticles; i++) {
        s_part[i,2]+=smokespeed; //Move up
        
        //Move to direction
        s_part[i,0]+=lengthdir_x(smokespeed/2,f_part[i,3]); 
        s_part[i,1]+=lengthdir_y(smokespeed/2,f_part[i,3]);
        
        if (s_part[i,2] &gt; smokeheight) { //If they reach the limit, respawn them down
            s_part[i,0] = x-wide/2+random(wide) //X
            s_part[i,1] = y-wide/2+random(wide) //Y
            s_part[i,2] = smokelow //Z
            s_part[i,3] = random(360); //Direction
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
